// Generated by CoffeeScript 1.9.3
(function() {
  var LocalStrategy, bodyParser, passport;

  LocalStrategy = require('passport-local').Strategy;

  passport = require('passport');

  bodyParser = require('body-parser');

  module.exports = (function(flowee) {
    passport.use(new LocalStrategy({
      usernameField: 'login',
      passwordField: 'passwd'
    }, function(username, password, done) {
      return flowee.auth.getuser({
        username: username,
        password: password
      }, function(user) {
        if (!user) {
          return done(new Error("invalid credentials..sorry :/"));
        }
        return done(null, user);
      });
    }));
    passport.serializeUser(function(user, done) {
      console.log("serialize user");
      done(null, user.id);
    });
    passport.deserializeUser(function(id, done) {
      console.log("deserialize userid " + id);
      return flowee.auth.getuser({
        id: id
      }, function(user) {
        console.dir({
          "user is": user
        });
        if (user) {
          return done(null, user);
        }
        return done(new Error("user not found"));
      });
    });
    flowee.use(bodyParser.urlencoded({
      extended: false
    }));
    flowee.use(require('express-session')({
      secret: 'keyboard cat',
      cookie: {
        secure: false,
        maxAge: 6000,
        httpOnly: false
      },
      resave: false,
      saveUninitialized: true
    }));
    flowee.use(passport.initialize());
    flowee.use(passport.session());
    return flowee.use(function(req, res, next) {
      if (flowee.verbosity > 1) {
        console.log("middleware:passport-local " + JSON.stringify(req.session));
      }
      if (flowee.auth.shouldignore(req.url, req.method)) {
        return next();
      }
      return (passport.authenticate('local', {
        failureRedirect: '/login'
      }, function(rs, rq) {
        return next();
      }))(req, res, next);
    });
  }).bind({});

}).call(this);
